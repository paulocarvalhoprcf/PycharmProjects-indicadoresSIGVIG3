import csv
from datetime import datetime
from time import sleep

from tabulate import tabulate

saudacaoInicial = ('''------------------------------------------------------------------
------------- BEM-VINDO AO BANCO DE DADOS DO SIGVIG3 --------------
------------------------------------------------------------------''')

menuGeral = True

while menuGeral:

    print(saudacaoInicial)

    operacao = int(input('''Qual o tipo de operação deseja pesquisar: exportação ou importação?
Digite [1] para exportação
Digite [2] para importação
Digite [3] para relatório geral por período
Digite [4] para sair da aplicação
-------------------------------------------------------------------\n'''))

    usoPropostoVegetal = (
    "produto vegetal para consumo direto", "embalagem e suportes de madeira", "material de pesquisa de origem vegetal",
    "agente para controle biológico", "vinhos e derivados da uva e do vinho", "máquinas agrícolas",
    "produto vegetal industrializado", "produto vegetal in natura", "agrotóxico", "material para propagação vegetal",
    "fertilizante", "bebidas em geral", "corretivo", "inoculante")

    usoPropostoAnimal = (
    "animal vivo doméstico de companhia", "animal vivo para cria", "animal vivo para abate", "animal vivo para engorda",
    "produto de origem animal comestível", "outros produtos destinados à alimentação animal",
    "animal vivo para esporte", "animal vivo para exposição e espetáculo", "animal vivo para pesquisa",
    "animal vivo para reprodução", "animal vivo para zoológico", "material de pesquisa de origem animal",
    "material de multiplicação animal",
    "produto de uso veterinário", "produto biológico", "produto de origem animal não comestível para industrialização",
    "produto de origem animal não comestível para fins opoterápicos", "troféu de caça e taxidermia",
    "produto de origem vegetal destinado à alimentação animal")

    arquivo_1 = 'extracao_dados_pov.csv'
    arquivo_2 = 'extracao_dados_impo_pov.csv'
    arquivo_3 = 'extracao_dados_poa.csv'
    arquivo_4 = 'sigvig3_fitos.csv'

    menuAnimalVegetal = True

    while menuAnimalVegetal:

        if operacao == 1:

            area = int(input('''Qual área agropecuária deseja pesquisar?
Digite [1] para animal
Digite [2] para vegetal
Digite [3] para sair\n'''))

            if area == 1:

                menuAnimal = True

                while menuAnimal:

                    produto = input("Qual produto deseja pesquisar na base de dados?\n").lower()

                    def buscaExportacaoAnimal(produto):

                        tabela = csv.reader(open(f'/Users/pauloroberto/Desktop/{arquivo_3}'))
                        c = 0
                        p = 0
                        for linha in tabela:
                            c += 1
                            mercadoria = linha[18]
                            if produto in mercadoria.lower():
                                p += 1
                        print('----------------------------------------------------')
                        print('---RELATÓRIO DE REGISTRO DE LPCO NA BASE DE DADOS---')
                        print('----------------------------------------------------')
                        tabelaFinal = [['Tipo de Operação', 'Número total de LPCOs', f'Número total de LPCOs \ncom a expressão {produto.upper()} \nna descrição do produto'], ['Exportação Animal',  c, p]]
                        print(tabulate(tabelaFinal, headers='firstrow', tablefmt='fancy_grid'))

                    buscaExportacaoAnimal(produto)

                    pergunta1 = input("Deseja voltar ao menu da Exportação Animal?\nDigite 'S' para voltar:\n").lower()

                    if pergunta1 != 's':
                        menuAnimal = False

                sleep(1)

            elif area == 2:

                menuVegetal = True

                while menuVegetal:

                    tipoPesquisa = int(input('''Qual o tipo de pesquisa deseja fazer?
Digite [1] para pesquisar quantas LPCOs foram registradas na base de dados.
Digite [2] para pesquisar na base de dados por AFFA
Digite [3] para pesquisar por países de destino na base de dados.
Digite [4] para realizar pesquisas combinadas dos dois parâmetros anteriores.
Digite [5] para retornar ao menu principal.\n'''))

                    if tipoPesquisa == 1:

                        produto = input("Qual produto deseja pesquisar na base de dados?\n").lower()

                        def buscaExportacaoPorQuantidade(produto):

                            tabela = csv.reader(open(f'/Users/pauloroberto/Desktop/{arquivo_1}'))
                            c = 0
                            p = 0

                            for linha in tabela:
                                c += 1
                                mercadoria = linha[22]
                                if produto in mercadoria.lower():
                                    p += 1
                            print('----------------------------------------------------')
                            print('---RELATÓRIO DE REGISTRO DE LPCO NA BASE DE DADOS---')
                            print('----------------------------------------------------')
                            tabelaFinal = [['Tipo de Operação', 'Número total de LPCOs',
                                            f'Número total de LPCOs \ncom a expressão {produto.upper()} \nna descrição do produto'],
                                           ['Exportação Vegetal', c, p]]
                            print(tabulate(tabelaFinal, headers='firstrow', tablefmt='fancy_grid'))

                            if p == 0:
                                print("Não foram encontradas LPCOs contendo a expressão {} na base de dados.".format(produto.upper()))

                        buscaExportacaoPorQuantidade(produto)

                        pergunta2 = input("Deseja voltar ao menu da Exportação Vegetal?\nDigite 'S' para voltar:\n").lower()

                        sleep(1)

                        if pergunta2 != 's':
                            menuVegetal = False

                    elif tipoPesquisa == 2:

                        qualFiscal = input("Qual AFFA deseja pesquisar na base de dados?\n").lower()


                        def buscaExportacaoVegetalPorFiscal(fiscal):

                            tabela = csv.reader(open(f'/Users/pauloroberto/Desktop/{arquivo_4}'))
                            f = 0
                            nomeCompleto = ""

                            for linha in tabela:
                                dados = linha[3]
                                if fiscal in dados.lower() and linha[2] == 'VALIDO':
                                    f += 1
                                    nomeCompleto = f"{dados}"
                            print('----------------------------------------------------')
                            print('---RELATÓRIO DE REGISTRO DE LPCO NA BASE DE DADOS---')
                            print('----------------------------------------------------')
                            tabelaFinal = [['Tipo de Operação', 'Nome do AFFA',
                                            'Número de CF emitidos'],
                                           ['Exportação Vegetal', nomeCompleto, f]]
                            print(tabulate(tabelaFinal, headers='firstrow', tablefmt='fancy_grid'))

                            if f == 0:
                                print("Não foram encontrados CF emitidos pelo(a) AFFA {} na base de dados.".format(fiscal.upper()))


                        buscaExportacaoVegetalPorFiscal(qualFiscal)

                        pergunta3 = input("Deseja voltar ao menu da Exportação Vegetal?\nDigite 'S' para voltar:\n").lower()

                        sleep(1)

                        if pergunta3 != 's':
                            menuVegetal = False

                    elif tipoPesquisa == 3:

                        qualPais = input("Qual o país de destino deseja pesquisar na base de dados?\n").lower()

                        def buscaExportacaoPorPais(pais):

                            tabela = csv.reader(open(f'/Users/pauloroberto/Desktop/{arquivo_1}'))
                            p = 0
                            nomePais = ""

                            for linha in tabela:
                                dados = linha[11]
                                if pais in dados.lower():
                                    p += 1
                                    nomePais = f"{dados}"
                            print('----------------------------------------------------')
                            print('---RELATÓRIO DE REGISTRO DE LPCO NA BASE DE DADOS---')
                            print('----------------------------------------------------')
                            tabelaFinal = [['Tipo de Operação', 'País de destino',
                                            'Número de LPCOs'],
                                           ['Exportação Vegetal', nomePais, p]]
                            print(tabulate(tabelaFinal, headers='firstrow', tablefmt='fancy_grid'))

                            if p == 0:
                                print("Não foram encontradas LPCOs emitidas contendo o país de destino {} na base de dados.".format(
                                    pais.upper()))

                        buscaExportacaoPorPais(qualPais)

                        sleep(1)

                        pergunta4 = input("Deseja voltar ao menu da Exportação Vegetal?\nDigite 'S' para voltar:\n").lower()

                        if pergunta4 != 's':
                            menuVegetal = False

                    elif tipoPesquisa == 4:

                        qualFiscal = input("Qual AFFA deseja pesquisar na base de dados?\n").lower()
                        qualPais = input("Qual destino deseja pesquisar na base de dados?\n").lower()


                        def buscaExportacaoVegetalCombinada(fiscal, pais):

                            tabela = csv.reader(open(f'/Users/pauloroberto/Desktop/{arquivo_4}'))
                            n = 0
                            nomeCompleto = ""
                            nomePais = ""

                            for linha in tabela:
                                dados1 = linha[3]
                                dados2 = linha[10]
                                if fiscal in dados1.lower() and pais in dados2.lower() and linha[2] == 'VALIDO':
                                    n += 1
                                    nomeCompleto = f"{dados1}"
                                    nomePais = f"{dados2}"

                            print('----------------------------------------------------')
                            print('---RELATÓRIO DE REGISTRO DE LPCO NA BASE DE DADOS---')
                            print('----------------------------------------------------')
                            tabelaFinal = [['Tipo de Operação', 'Nome do AFFA', 'País de destino',
                                            'Número de CF'],
                                           ['Exportação Vegetal', nomeCompleto, nomePais, n]]
                            print(tabulate(tabelaFinal, headers='firstrow', tablefmt='fancy_grid'))

                            if n == 0:
                                print(
                                    "Não foram encontrados CF emitidos pelo AFFA {}, contendo coletivamente o país de destino {}.".format(qualFiscal.upper(),
                                        qualPais.upper()))

                        buscaExportacaoVegetalCombinada(qualFiscal, qualPais)

                        sleep(1)

                        pergunta5 = input("Deseja voltar ao menu da Exportação Vegetal?\nDigite 'S' para voltar:\n").lower()

                        if pergunta5 != 's':
                            menuVegetal = False

                    elif tipoPesquisa == 5:
                        menuAnimalVegetal = False
                        menuVegetal = False

            elif area == 3:

                pergunta7 = input("Deseja voltar ao menu geral?\nDigite 'S' para voltar:\n").lower()

                if pergunta7 != 's':
                    menuGeral = False
                    menuAnimalVegetal = False
                    menuVegetal = False
                    menuAnimal = False

                elif pergunta7 == 's':
                    menuAnimalVegetal = False
                    menuVegetal = False
                    menuAnimal = False

        elif operacao == 2:

            uso_proposto = int(input('''Qual área agropecuária deseja pesquisar?
Digite [1] para animal ou [2] para vegetal.
Digite [3] para pesquisar por NCM.\n'''))
            if uso_proposto == 1:
                qualArea = "Animal"
                for i in usoPropostoAnimal:
                    print(f"{usoPropostoAnimal.index(i) + 1} - {i}")
                print("Qual dos usos propostos deseja pesquisar?")
                uso = usoPropostoAnimal[int(input()) - 1]
                print(uso)

            elif uso_proposto == 2:
                qualArea = "Vegetal"
                for i in usoPropostoVegetal:
                    print(f"{usoPropostoVegetal.index(i) + 1} - {i}")
                print("Qual dos usos propostos deseja pesquisar?")
                uso = usoPropostoVegetal[int(input()) - 1]
                print(uso)

            elif uso_proposto == 3:
                ncm = input("Qual NCM deseja pesquisar?\n")

                tabela = csv.reader(open(f'/Users/pauloroberto/Desktop/{arquivo_2}'))

                w = 0
                for linha in tabela:
                    ncm_code = linha[4].strip('="')
                    if ncm == ncm_code:
                        w += 1
                    if w == 0:
                        w = 'ZERO'

                tabelaFinal = [
                    ['Tipo de Operação', 'NCM', 'Número total de LPCOs com o NCM'],
                    ['Importação', f'{ncm}', w]]

                print('----------------------------------------------------')
                print('---RELATÓRIO DE REGISTRO DE LPCO NA BASE DE DADOS---')
                print('----------------------------------------------------')
                print(tabulate(tabelaFinal, headers='firstrow', tablefmt='fancy_grid'))

            if uso_proposto == 1 or uso_proposto == 2:

                produto = input("Qual produto deseja pesquisar na base de dados?\n").lower()

                if uso_proposto == 1:
                    hashAnimal = {}

                    i = 0
                    for i in usoPropostoAnimal:
                        hashAnimal[i] = 0

                    l = 0
                    somaAnimal = 0
                    for u in usoPropostoAnimal:
                        res = list(hashAnimal.keys())[l]
                        tabela = csv.reader(open(f'/Users/pauloroberto/Desktop/{arquivo_2}'))
                        n = 0
                        for linha in tabela:
                            usoProposto = linha[11]
                            if res in usoProposto.lower():
                                n += 1
                        hashAnimal[res] = n
                        l += 1

                        somaAnimal += n

                elif uso_proposto == 2:

                    hashVegetal = {}

                    i = 0
                    for i in usoPropostoVegetal:
                        hashVegetal[i] = 0

                    l = 0
                    somaVegetal = 0
                    for u in usoPropostoVegetal:
                        res = list(hashVegetal.keys())[l]
                        tabela = csv.reader(open(f'/Users/pauloroberto/Desktop/{arquivo_2}'))
                        n = 0
                        for linha in tabela:
                            usoProposto = linha[11]
                            if res in usoProposto.lower():
                                n += 1
                        hashVegetal[res] = n
                        l += 1

                        somaVegetal += n

                def buscaImportacaoVegetal(produto):

                    tabela = csv.reader(open(f'/Users/pauloroberto/Desktop/{arquivo_2}'))
                    p = 0
                    u = 0

                    for linha in tabela:
                        mercadoria = linha[6]
                        usoProposto = linha[11]
                        if produto in mercadoria.lower():
                            p += 1
                        if uso in usoProposto.lower():
                            u += 1

                    c = 0
                    if uso_proposto == 1:
                        c = somaAnimal

                    elif uso_proposto == 2:
                        c = somaVegetal

                    tabelaFinal = [
                        ['Tipo de Operação', 'Número total de LPCOs', f'Número de LPCOs do\nUso Proposto {uso.upper()}',
                         f'Número de LPCOs contendo o\n produto {produto.upper()} na descrição'],
                        [f'Importação {qualArea}', c, u, p]]

                    print('----------------------------------------------------')
                    print('---RELATÓRIO DE REGISTRO DE LPCO NA BASE DE DADOS---')
                    print('----------------------------------------------------')
                    print(tabulate(tabelaFinal, headers='firstrow', tablefmt='fancy_grid'))

                buscaImportacaoVegetal(produto)

            pergunta7 = input("Deseja fazer nova pesquisa sobre áreas agropecuárias, usos propostos e NCM?\nDigite 'S' para pesquisar:\n").lower()

            if pergunta7 != 's':
                menuAnimalVegetal = False

        elif operacao == 3:

        # Utilizar data no formato dd/mm/aa
            dataInicio = input("Qual a data do início do período de pesquisa? Usar formato dd/mm/aa\n")
            dataFim = input("Qual a data do final do período de pesquisa? Usar formato dd/mm/aa\n")

            def checarTamanhoDatas(dataInicio, dataFim):

                if len(dataInicio) != 8 or len(dataFim) != 8:
                    print("---------------------------------------------------------------------------------")
                    print("As datas de início e do final do período de pesquisa devem ter o formato dd/mm/aa")
                    print("---------------------------------------------------------------------------------")

            checarTamanhoDatas(dataInicio, dataFim)

            dataInicio = input("Qual a data do início do período de pesquisa? Usar formato dd/mm/aa\n")
            dataFim = input("Qual a data do final do período de pesquisa? Usar formato dd/mm/aa\n")

            def checarConsistenciaDatas(dataInicio, dataFim):

                minhaDataInicio = datetime.strptime(dataInicio, "%d/%m/%y")
                minhaDataFim = datetime.strptime(dataFim, "%d/%m/%y")

                if minhaDataInicio > minhaDataFim:

                    print("---------------------------------------------------------------------------------")
                    print("A data de início do período de pesquisa deve ser anterior ao do final do período")
                    print("---------------------------------------------------------------------------------")

            checarConsistenciaDatas(dataInicio, dataFim)

            dataInicio = input("Qual a data do início do período de pesquisa? Usar formato dd/mm/aa\n")
            dataFim = input("Qual a data do final do período de pesquisa? Usar formato dd/mm/aa\n")

            def buscaRelatorioTotalPorPeriodo(dataInicio, dataFim):

                checarTamanhoDatas(dataInicio, dataFim)

                checarConsistenciaDatas(dataInicio, dataFim)

                minhaDataInicio = datetime.strptime(dataInicio, "%d/%m/%y")
                minhaDataFim = datetime.strptime(dataFim, "%d/%m/%y")

                if minhaDataInicio > minhaDataFim:
                    while minhaDataInicio > minhaDataFim:
                        checarConsistenciaDatas(dataInicio, dataFim)

                if len(dataInicio) != 8 or len(dataFim) != 8:
                    while len(dataInicio) != 8 or len(dataFim) != 8:
                        checarTamanhoDatas(dataInicio, dataFim)

                tabela1 = csv.reader(open(f'/Users/pauloroberto/Desktop/{arquivo_3}'))
                nea = 0

                for linha in tabela1:
                    if linha[5] != "Data de Recebimento":
                        dataRecebimento = linha[5][0:8]
                        minhaDataRecebimento = datetime.strptime(dataRecebimento, "%d/%m/%y")
                        if minhaDataInicio <= minhaDataRecebimento <= minhaDataFim:
                            nea += 1

                tabela2 = csv.reader(open(f'/Users/pauloroberto/Desktop/{arquivo_1}'))
                nev = 0

                for linha in tabela2:
                    if (linha[5]) != "Data de Recebimento":
                        dataRecebimento = linha[5][0:8]
                        minhaDataRecebimento = datetime.strptime(dataRecebimento, "%d/%m/%y")
                        if minhaDataInicio <= minhaDataRecebimento <= minhaDataFim:
                            nev += 1

                tabela3 = csv.reader(open(f'/Users/pauloroberto/Desktop/{arquivo_2}'))
                nia = 0

                for linha in tabela3:
                    if linha[24] != "Data de Recebimento":
                        dataRecebimento = linha[24][0:8]
                        minhaDataRecebimento = datetime.strptime(dataRecebimento, "%d/%m/%y")
                        for i in usoPropostoAnimal:
                            if minhaDataInicio <= minhaDataRecebimento <= minhaDataFim and i in linha[11].lower():
                                nia += 1

                tabela3 = csv.reader(open(f'/Users/pauloroberto/Desktop/{arquivo_2}'))
                niv = 0

                for linha in tabela3:
                    if linha[24] != "Data de Recebimento":
                        dataRecebimento = linha[24][0:8]
                        minhaDataRecebimento = datetime.strptime(dataRecebimento, "%d/%m/%y")
                        for i in usoPropostoVegetal:
                            if minhaDataInicio <= minhaDataRecebimento <= minhaDataFim and i in linha[11].lower():
                                niv += 1

                tabelaFinal = [['Tipo de Operação','Número de LPCOs'], ['Exportação Animal',  nea],
                           ['Exportação Vegetal', nev], ['Importação Animal', nia], ['Importação Vegetal', niv]]

                print('----------------------------------------------------')
                print('---RELATÓRIO DE REGISTRO DE LPCO NA BASE DE DADOS---')
                print('----------------------------------------------------')
                print(f'Período requisitado: {dataInicio} a {dataFim}')
                print(tabulate(tabelaFinal, headers='firstrow', tablefmt='fancy_grid'))

            buscaRelatorioTotalPorPeriodo(dataInicio, dataFim)

            sleep(1)

            pergunta6 = input("Deseja fazer nova pesquisa na base com outras datas?\nDigite 'S' para pesquisar:\n").lower()

            if pergunta6 != 's':
                menuAnimalVegetal = False

        elif operacao == 4:
            saudacaoFinal1 = "Desligando..."
            print(saudacaoFinal1)
            sleep(2)
            saudacaoFinal2 = "Desligado!"
            print(saudacaoFinal2)
            menuGeral = False
            menuAnimalVegetal = False
            menuVegetal = False
            menuAnimal = False
